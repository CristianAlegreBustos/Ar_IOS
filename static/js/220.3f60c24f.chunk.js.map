{"version":3,"file":"static/js/220.3f60c24f.chunk.js","mappings":"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","sources":["models/InstagramLogo.js","models/TikTokLogo.js","models/WspLogo.js","components/FinalText.js"],"sourcesContent":["import React, { useRef, memo } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\n\r\nfunction InstagramLogo({ position, scale }) {\r\n  const { nodes, materials } = useGLTF(\r\n    './modelosRA/instagramLogoCompressed.gltf'\r\n  )\r\n\r\n  const igLogo = useRef()\r\n\r\n  useFrame(({ clock }) => {\r\n    const t = clock.getElapsedTime()\r\n    igLogo.current.rotation.x = Math.cos(t / 20) / 10 - 0.15\r\n    igLogo.current.rotation.y = Math.cos(t / 10) / 4\r\n    igLogo.current.rotation.z = (+0.3 + Math.sin(t)) / 4\r\n  })\r\n  return (\r\n    <group position={position} scale={scale} dispose={null} ref={igLogo}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_insta001.geometry}\r\n        material={materials['diffuse_0.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'#643fBc'} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_insta.geometry}\r\n        material={materials['diffuse_Aqua.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'cyan'} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/modelosRA/instagramLogoCompressed.gltf')\r\n\r\nexport default memo(InstagramLogo)\r\n","import React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { memo } from 'react'\r\n\r\nfunction TikTokLogo({ position, scale }) {\r\n  const { nodes, materials } = useGLTF('./modelosRA/tiktokLogoCompressed.gltf')\r\n  const tiktok = useRef()\r\n\r\n  useFrame(({ clock }) => {\r\n    const t = clock.getElapsedTime()\r\n    tiktok.current.rotation.x = Math.cos(t / 20) / 10 - 0.2\r\n    tiktok.current.rotation.y = Math.cos(t / 10) / 4\r\n    tiktok.current.rotation.z = +0.2 + Math.sin(t * 0.5) / 3\r\n  })\r\n\r\n  return (\r\n    <group position={position} dispose={null} scale={scale} ref={tiktok}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_tiktok001.geometry}\r\n        material={materials['diffuse_0.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'#643fBc'} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_tiktok.geometry}\r\n        material={materials['diffuse_Aqua.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'cyan'} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/modelosRA/tiktokLogoCompressed.gltf')\r\n\r\nexport default memo(TikTokLogo)\r\n","import React, { useRef, memo } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport { useFrame } from '@react-three/fiber'\r\n\r\nfunction WspLogo({ position, scale }) {\r\n  const { nodes, materials } = useGLTF('./modelosRA/wspLogoCompressed.gltf')\r\n  const wspLogo = useRef()\r\n  useFrame(({ clock }) => {\r\n    const t = clock.getElapsedTime()\r\n    wspLogo.current.rotation.x = Math.cos(t / 20) / 10 - 0.2\r\n    wspLogo.current.rotation.y = Math.cos(t / 10) / 4\r\n    wspLogo.current.rotation.z = +0.15 + Math.sin(t * 0.8) / 3\r\n  })\r\n  return (\r\n    <group position={position} dispose={null} scale={scale} ref={wspLogo}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_whast.geometry}\r\n        material={materials['diffuse_0.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'#643fBc'} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.logo_whast001.geometry}\r\n        material={materials['diffuse_Aqua.001']}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      >\r\n        <meshStandardMaterial color={'cyan'} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/modelosRA/wspLogoCompressed.gltf')\r\n\r\nexport default memo(WspLogo)\r\n","// import Text from './Text.js'\r\nimport { animated, useSpring } from '@react-spring/three'\r\nimport InstagramLogo from '../models/InstagramLogo.js'\r\nimport TikTokLogo from '../models/TikTokLogo.js'\r\nimport WspLogo from '../models/WspLogo.js'\r\nimport { memo, useRef, useEffect } from 'react'\r\nimport { PositionalAudio } from '@react-three/drei'\r\n\r\nconst FinalText = ({ display }) => {\r\n  const { scale } = useSpring({ scale: display ? 1 : 0, delay: 1100 })\r\n  const refPositionalAudio = useRef()\r\n\r\n  console.log('Finalt Text')\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      display === true &&\r\n        refPositionalAudio.current &&\r\n        refPositionalAudio.current.play()\r\n    }, 1800)\r\n  }, [display])\r\n\r\n  return (\r\n    <group scale={scale}>\r\n      {display && (\r\n        <PositionalAudio\r\n          loop={false}\r\n          url=\"./soundRA/mensajeFinal.mp3\"\r\n          distance={1}\r\n          ref={refPositionalAudio}\r\n        />\r\n      )}\r\n     \r\n        <WspLogo scale={0.01} position={[-0.16, -0.2, -1]} />\r\n        <InstagramLogo scale={0.01} position={[-0, -0.2, -1]} />\r\n\r\n        <TikTokLogo scale={0.01} position={[0.16, -0.2, -1]} />\r\n\r\n    </group>\r\n  )\r\n}\r\n\r\nexport default memo(FinalText)\r\n"],"names":["InstagramLogo","position","scale","useGLTF","nodes","materials","igLogo","useRef","useFrame","t","clock","getElapsedTime","current","rotation","x","Math","cos","y","z","sin","dispose","ref","castShadow","receiveShadow","geometry","logo_insta001","material","PI","color","logo_insta","memo","TikTokLogo","tiktok","logo_tiktok001","logo_tiktok","WspLogo","wspLogo","logo_whast","logo_whast001","FinalText","display","useSpring","delay","refPositionalAudio","console","log","useEffect","setTimeout","play","PositionalAudio","loop","url","distance"],"sourceRoot":""}